apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mongoexpress.deploymentname }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.mongoexpress.appname }}
  template:
    metadata:
      labels:
        app: {{ .Values.mongoexpress.appname }}
    spec:
      containers:
        - name: mongo-express
          image: "{{ .Values.mongoexpress.image.repository }}:{{ .Values.mongoexpress.image.tag }}"
          ports:
            - containerPort: {{ .Values.mongoexpress.service.port }}
          env:
            - name: ME_CONFIG_MONGODB_SERVER
              value: {{ .Values.mongodb.servicename }}
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              value: {{ .Values.mongodb.auth.username }}
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              value: {{ .Values.mongodb.auth.password }}
            - name: ME_CONFIG_MONGODB_AUTH_DATABASE
              value: "admin"  # Crucial if user was created in admin DB
            - name: ME_CONFIG_BASICAUTH_USERNAME
              value: {{ .Values.mongodb.auth.username }}
            - name: ME_CONFIG_BASICAUTH_PASSWORD
              value: {{ .Values.mongodb.auth.password }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.mongoexpress.servicename }}
spec:
  type: {{ .Values.mongoexpress.service.type }}
  selector:
    app: {{ .Values.mongoexpress.appname }}
  ports:
    - protocol: {{ .Values.mongoexpress.service.protocol }}
      port: {{ .Values.mongoexpress.service.port }}
      targetPort: {{ .Values.mongoexpress.service.port }}
  type: ClusterIP